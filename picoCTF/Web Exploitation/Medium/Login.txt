challenge -- 

Description
My dog-sitter's brother made this website but I can't get in; can you help?

website link : https://login.mars.picoctf.net/

When you visits the website you find a login page.

Walkthrough :

The login page looks like a normal page but by deeper inspection into the source code of the page,you will find it was not verifying the user name and passwords from the sqldata base or server. SO no sql injection is going to work here.While observing the code we can find that the logic for the credentials verification is within the code it self you can find a file named as index.js which is javascript. In the index.js file 

-----------
 const r = {
            u: "input[name=username]",
            p: "input[name=password]"
        }
          , t = {};
        for (const e in r)
            t[e] = btoa(document.querySelector(r[e]).value).replace(/=/g, "");
        return "YWRtaW4" !== t.u ? alert("Incorrect Username") : "cGljb0NURns1M3J2M3JfNTNydjNyXzUzcnYzcl81M3J2M3JfNTNydjNyfQ" !== t.p ? alert("Incorrect Password") : void alert(`Correct Password! Your flag is ${atob(t.p)}.`)
                                                                                           --------------

you will find this in which the user name and password are taking as inputs and encoding them into base64 and the logic is comparing the encoded username and password with predefined username and passwords which are also in encoded format . we simply pick the encoded username and password and decode them and use as credentials for the website . If the user name and password matches the logic will return the password as the flag . 


Steps :

1)Follow the link and find the website 
2)View the page source of the website 
3)Find the index.js file 
4)observe the logic of the file 
5)you will able to find the username and password which are encrypted in base 64 format.
6)The password is the flag .

flag :

picoCTF{53rv3r_53rv3r_53rv3r_53rv3r_53rv3r}

 